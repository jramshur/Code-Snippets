// Purpose: this set of power query steps renames columns. 
// 1. A list of renaming values from old name to new name are loaded from a table / mapping table.
// 2. select relevant columns from mapping table
// 3. convert table into a list of list. This is the format that Table.RenameColumns expects.
// 4. rename columns of data table (tblData) using Table.RenameColumns

let
    Source = tblWithNameMapping,
    Mapping = Table.SelectColumns(Source,{"Old_ColumnName", "New_ColumnName"}),
    MappingList = Table.ToRows(#"Mapping"),
    #"Rename all columns" = Table.RenameColumns(tblData,MappingList),
in
    #"Rename all columns"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// OPTION 2
// Function to rename columns in a table based on a mapping table
(renameColumns) =>
let
    // Function to rename columns in a table based on a mapping table
    renameColumnsTable = (tableToRename as table, columnMappingTable as table) =>
    let
        // List of old column names
        oldColumnNames = Table.ColumnNames(tableToRename),
        
        // List of new column names
        newColumnNames = List.Transform(oldColumnNames, each try Table.SelectRows(columnMappingTable, each [Old_ColumnName] = _) otherwise _),
        
        // Rename columns
        renamedTable = Table.RenameColumns(tableToRename, List.Zip({oldColumnNames, newColumnNames}))
    in
        renamedTable,

    // Invoke the inner function with the provided inputs
    result = renameColumnsTable(renameColumns{0}, renameColumns{1})
in
    result

// OPTION 2: Usage
// Invoke the function with the data table and column mapping table
renamedTable = renameColumns({dataTable, columnMappingTable})
